'use strict';

var idCounter = 0
var taskList = [];

const sideNav = document.getElementById('side-panel');
const taskContainer = document.getElementById('task-container');
const userInput = document.getElementById('inputBox');
const defaultConfig = [{"name":"Today","icon":"far fa-calendar","active":true,"itemList":[{"id":0,"text":"Brainstorm some concepts"},{"id":1,"text":"Design wireframe and mockup ✏️"},{"id":2,"text":"Bring umbrella home ⛱"},{"id":3,"text":"Buy some cabbages 🥬"},{"id":4,"text":"Pickup children from school 👨‍👧‍👦"}]},{"name":"This Week","icon":"far fa-calendar-alt","active":false,"itemList":[{"id":5,"text":"Hand in weekly report 📄"},{"id":6,"text":"Meeting with client 🤦"}]},{"name":"This Month","icon":"far fa-calendar-times","active":false,"itemList":[]},{"name":"divider"},{"name":"Reminders","icon":"far fa-bell","active":false,"itemList":[]},{"name":"divider"},{"name":"Completed","icon":"far fa-calendar-check","active":false,"itemList":[]}];

const sleep = (ms) => {
    return new Promise(resolve => setTimeout(resolve, ms));
}

// Add new item into the current task and DOM.
userInput.onkeydown = (e) => {
    if (e.key == 'Enter') {
        e.preventDefault();
        if (userInput.value.trim() != '') {
            const newItem = Task.getCurrentTask().newItem(userInput.value.trim());
            appendItemDOM(newItem);
            updateConfig();
            userInput.value = '';
        }
    }
}


class Item {
    constructor(id, text) {
        this.id = id;
        this.text = text;
        // this.date for possible Date feature
    }

    setText(text) {
        this.text = text;
    }

    clone() {
        return new Item(this.id, this.text);
    }
}


class Task {
    constructor(name, icon, itemList, active) {
        this.name = name;
        this.icon = icon;
        this.active = active;
        this.itemList = [];
        for (const {id, text} of itemList) {
            this.newItem(text);
        }
    }

    getName() {
        return this.name;
    }

    setName(name) {
        this.name = name;    
    }

    newItem(text) {
        const newItem = new Item(idCounter, text);
        this.itemList.push(newItem);
        idCounter += 1;
        return newItem;
    }
    
    addItem(item) {
        // this.itemList[item.id] = item;
        this.itemList.push(item);
    }

    getItem(id) {
        for (const item of this.itemList) {
            if (item.id == id)
                return item;
        }
    }
    
    updateItem(id, value) {
        for (const item of this.itemList) {
            if (item.id == id)
                item.setText(value);
        }
    }

    removeItem(id) {
        for (var i = 0; i < this.itemList.length; i++) {
            if (this.itemList[i].id == id) {
                return this.itemList.splice(i, 1);
            }
        }
    }

    static setCurrentTask(taskName) {
        if (this.curTask)
            this.curTask.active = false;

        // Assign current tab task to this.curTask
        for (const task of taskList) {
            if (task.name == taskName) {
                task.active = true;
                this.curTask = task;
            }
        }
        
        // Add all items of this task to the dom.
        for (const item of this.curTask.itemList) {
            appendItemDOM(item);
        }
        return this.curTask;
    }

    static getCurrentTask() {
        return this.curTask;
    }

    static getTask(taskName) {
        for (const task of taskList) {
            if (task.name == taskName)
                return task;
        }
    }
}

function loadTasks(content) {
    const {name, icon, itemList, active} = content;
    let isActive = '';
    
    taskList.push(new Task(name, icon, itemList, active));

    if (active) {
        isActive = ' active';
        Task.setCurrentTask(name);
        document.getElementById('task-title').value = name;
    }

    const tabContent = 
        '<div id="' + name + '" class="tab' + isActive + '" onclick="switchTask(&quot;' + name +'&quot;)">' +
            '<i class="' + icon + '"></i>' +
            '<span class="ml-2">' + name + '</span>' +
        '</div>';
    
    document.getElementById('side-panel').insertAdjacentHTML('beforeend', tabContent);
}

function loadDivider() {
    taskList.push({"name":"divider"});
    const element = '<div class="divider"></div>';
    document.getElementById('side-panel').insertAdjacentHTML('beforeend', element);
}

function loadConfig() {
    let userConfig = JSON.parse(localStorage.getItem('userConfig'));
    userConfig = (userConfig == null)? defaultConfig : userConfig;

    for (const conf of userConfig) {
        if (conf.name == "divider") {
            loadDivider();
        } else {
            loadTasks(conf);
        }
    }
}

function updateConfig() {
    localStorage.setItem('userConfig', JSON.stringify(taskList));
}

function draggables(id, element) {
    document.getElementById(id).draggable = true;
}

function undraggable(id, element) {
    document.getElementById(id).draggable = false;
}

function showHideSideNav() {
    if (sideNav.className.includes('active')) {
        sideNav.setAttribute('data-show', 'off');
        sideNav.className = sideNav.className.replace(' active', '');
    } else {
        sideNav.setAttribute('data-show', 'on');
        sideNav.className += ' active';
    }
}

function switchTask(taskName) {
    // Remove .active class on previous tab
    let prevTab = document.getElementById(Task.getCurrentTask().getName());
    prevTab.className = prevTab.className.replace(' active', '');
    
    // Add .active class to the current tab
    document.getElementById(taskName).className += ' active';
    
    // Change the display contents according to current tab
    taskContainer.innerHTML = '';
    Task.setCurrentTask(taskName);

    // Change title
    document.getElementById('task-title').value = taskName;
    // Close the side bar if it's active in small screen
    sideNav.className = sideNav.className.replace(' active', '');
    updateConfig();
}

function updateTaskNameDOM(element) {
    //Update task name
    const oldName = Task.getCurrentTask().getName();
    Task.getCurrentTask().setName(element.value);
    // Update tab's name to the new name.
    document.getElementById(oldName).querySelector('span').innerText = element.value;
    document.getElementById(oldName).id = element.value;
    updateConfig();
}

function appendItemDOM(item) {
    const {id, text} = item;

    const appendTag = '<i class="fas fa-trash" onclick="removeItemDOM(' + id + ');"></i>' +
                        '<i class="ml-2 fas fa-bars" onmousedown="draggables(' + id + ', this);" onmouseleave="undraggable(' + id + ', this);"></i>';
    const itemTag = '<li id="' + id + '" class="list-item">' +
                        '<button class="btn-none mr-2" onclick="completeItemDOM(' + id + ')">&#9675;</button>' +
                        '<input type="text" class="item-input" value="' + text + '" onchange="updateItemDOM(' + id + ', this)" />' +
                        '<div class="append">' + appendTag + '</div>' +
                    '</li>';

    taskContainer.insertAdjacentHTML('beforeend', itemTag);
}

function updateItemDOM(id, inputBox) {
    Task.getCurrentTask().updateItem(id, inputBox.value);
    updateConfig();
    if (inputBox.value.trim() == '')
        removeItemDOM(id);
}

function removeItemDOM(id) {
    Task.getCurrentTask().removeItem(id);
    updateConfig()
    // Animation for removing
    document.getElementById(id).className = "list-item animated fadeOutLeft faster";
    sleep(400).then(() => {
        document.getElementById(id).remove();
    });
}

function completeItemDOM(id) {
    // Move item from current task to completed task
    const item = Task.getCurrentTask().getItem(id).clone();
    Task.getCurrentTask().removeItem(id);
    Task.getTask('Completed').addItem(item);
    updateConfig();
    
    // Animation for the completion
    document.getElementById(id).className = "list-item animated fadeOutUp faster";
    document.getElementById('Completed').className += " animated pulse faster";
    sleep(500).then(() => {
        document.getElementById(id).remove();
        document.getElementById('Completed').className = document.getElementById('Completed').className.replace(' animated pulse faster', '');
    });
}

loadConfig();